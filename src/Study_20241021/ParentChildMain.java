package Study_20241021;

class P{} // 부모
class C_1 extends P{} // 자식 1
class C_2 extends P{} // 자식 2
class A_1 extends C_1{} // 후손

public class ParentChildMain {
    public static void main(String[] args) {
        // 1.업 캐스팅 (부모 <- 자식)
        P p2  = (P) new C_1();
        // (P) 생략 가능, 자동으로 됨
        P p1  = new C_1();

        // 2.1 다운 캐스팅 준비과정인 업캐스팅
        // 원래 본체는 후손(new A_1())
        C_1 c11 = new A_1(); //  자식 <- 후손
        P p11 = new A_1(); //  부모 <- 후손 

        // 2.2 다운 캐스팅 (자식 <- 부모)
        // (A_1) 적어서 강제로 변경해야 함
        A_1 ca = (A_1) c11; // 후손 <- 자식 (결국엔 원래 후손이었던 것이, 자식이 되었다가, 다시 후손이 된 것)

        A_1 pa = (A_1) p11; // 후손 <- 부모 (결국엔 원래 후손이었던 것이, 부모가 되었다가, 다시 후손이 된 것)
        C_1 pc = (C_1) p11; // 자식 <- 부모 (원래 후손이었던 것이, 부모가 되었다가, 자식이 된 것)

        //////////////////////////////////////////////
        // 다운 캐스팅시 주의사항
//        // 애초부터 본체가
//        // new 부모였을 경우에는 오류가 난다
//        P 조상 = new P();
//        // 컴파일시에는 체킹이 안되고
//        //런타임 에러(실제 실행할 때 오류터짐)가 남
//        C_2 c2 = (C_2)조상; // 에러
    }
}
